name: Publish Wheels

on:
  push:
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    outputs:
        version_output: ${{env.VERSION_NUMBER}}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    env:
       INSTALL_PREFIX: ${{ github.workspace }}/prereqs
       MACOSX_DEPLOYMENT_TARGET: 12.1

    steps:
      - uses: actions/checkout@v4

      - name: Set version number
        run: |
            VERSION_NUMBER=${GITHUB_REF_NAME:1}
            if [ $(echo "${VERSION_NUMBER##*.}") == "test" ]; then
                VERSION_NUMBER=${VERSION_NUMBER%.*}
            fi
            echo VERSION_NUMBER=${VERSION_NUMBER} >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL: "INSTALL_PREFIX=${{ env.INSTALL_PREFIX }} .github/scripts/install_prereqs.sh release"
          CIBW_BEFORE_BUILD: "pip install -r {package}/requirements_dev.txt && cd {package}"
          #CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
          CIBW_BUILD: "cp39-*"
          CIBW_SKIP: "*musllinux*"
          CIBW_CONFIG_SETTINGS: "--build-option=--with-version=${{ env.VERSION_NUMBER }} --build-option=--with-genomicsdb=${{ env.INSTALL_PREFIX }}"
          CIBW_ENVIRONMENT: CMAKE_PREFIX_PATH=${{ env.INSTALL_PREFIX }}
          CIBW_ENVIRONMENT_MACOS: DYLD_LIBRARY_PATH=${{ env.INSTALL_PREFIX }}/lib
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH=${{ env.INSTALL_PREFIX }}/lib64:${{ env.INSTALL_PREFIX }}/lib:$LD_LIBRARY_PATH
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest {package}/test

      - uses: actions/upload-artifact@v3
        name: Upload Wheel artifacts
        with:
          path: ./wheelhouse/*.whl
    
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    needs: build_wheels
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: | 
            python -m pip install --upgrade pip
            python -m pip install -r requirements_dev.txt
            python setup.py sdist --with-version=${{needs.build_wheels.outputs.version_output}}

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_all:
    name: Publish wheels
    needs: [build_wheels,make_sdist]
    runs-on: ubuntu-latest
    permissions:
        id-token: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish package to TestPyPI
      if: ${{ contains(github.ref_name,'.test') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    
    - name: Publish package to PyPI
      if: ${{ !contains(github.ref_name,'.test') }}
      uses: pypa/gh-action-pypi-publish@release/v1
